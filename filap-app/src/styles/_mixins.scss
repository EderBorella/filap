// Mixins and Utilities
@import 'variables';

// Responsive breakpoints mixin
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found in $breakpoints map.";
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  cursor: pointer;
  font-family: $font-family;
  font-weight: map-get($font-weights, medium);
  text-decoration: none;
  transition: all map-get($transitions, normal);
  border-radius: map-get($border-radius, large);
  position: relative;
  overflow: hidden;
  
  // Modern button ripple effect
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }
  
  &:hover::before {
    left: 100%;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
    
    &::before {
      display: none;
    }
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);
  }
  
  &:active {
    transform: translateY(1px);
  }
}

@mixin button-primary {
  @include button-base;
  background: linear-gradient(135deg, #4F46E5 0%, #7C3AED 100%);
  color: color(surface);
  border-radius: 16px; // More rounded as per design specs
  box-shadow: 0 4px 15px rgba(79, 70, 229, 0.4);
  
  &::before {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  }
  
  &:hover:not(:disabled) {
    transform: translateY(-2px);
    background: linear-gradient(135deg, #4338CA 0%, #6D28D9 100%); // Darker gradient on hover
    box-shadow: 0 8px 25px rgba(79, 70, 229, 0.6);
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(79, 70, 229, 0.4);
  }
}

@mixin button-secondary {
  @include button-base;
  background: color(surface);
  color: color(text-primary);
  border: 2px solid color(gray-200);
  border-radius: 16px; // More rounded to match primary button
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  
  &::before {
    background: linear-gradient(90deg, transparent, rgba(79, 70, 229, 0.1), transparent);
  }
  
  &:hover:not(:disabled) {
    background: color(gray-50);
    border-color: #4F46E5; // Use exact primary color
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
}

@mixin button-ghost {
  @include button-base;
  background: transparent;
  color: color(text-secondary);
  
  &:hover:not(:disabled) {
    background: rgba(79, 70, 229, 0.1);
    color: color(primary);
    transform: translateY(-1px);
  }
}

// Input field mixin
@mixin input-base {
  width: 100%;
  padding: spacing(3) spacing(4);
  border: 1px solid color(gray-300);
  border-radius: map-get($border-radius, medium);
  font-family: $font-family;
  font-size: map-get($font-sizes, body);
  background: color(surface);
  color: color(text-primary);
  transition: all map-get($transitions, fast);
  
  &::placeholder {
    color: color(text-tertiary);
  }
  
  &:focus {
    outline: none;
    border-color: color(primary);
    box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
  }
  
  &:disabled {
    background: color(gray-100);
    color: color(text-tertiary);
    cursor: not-allowed;
  }
}

// Card mixin
@mixin card {
  background: color(surface);
  border-radius: map-get($border-radius, medium);
  box-shadow: map-get($shadows, medium);
  padding: spacing(6);
}

// Navigation blur effect
@mixin nav-blur {
  backdrop-filter: blur(8px);
  background: rgba(255, 255, 255, 0.8);
}

// Truncate text
@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Loading animation
@mixin loading-spinner {
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  animation: spin 1s linear infinite;
}

// Smooth focus ring
@mixin focus-ring($color: color(primary)) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Container with responsive padding
@mixin container($max-width: 1280px) {
  max-width: $max-width;
  margin: 0 auto;
  padding-left: spacing(4);
  padding-right: spacing(4);
  
  @include respond-to(sm) {
    padding-left: spacing(6);
    padding-right: spacing(6);
  }
  
  @include respond-to(lg) {
    padding-left: spacing(8);
    padding-right: spacing(8);
  }
}